import { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import gigsMock from "../mocks/gigs";
import "./GigsDetailPage.css";

const sellersMock = {
  "john_doe": {
    firstName: "John",
    lastName: "Doe",
    country: "France",
    bio: "D√©veloppeur web passionn√© avec 10 ans d'exp√©rience.",
    avatar: "/avatars/john_doe.jpg",
  },
  "jane_smith": {
    firstName: "Jane",
    lastName: "Smith",
    country: "Canada",
    bio: "Designer freelance sp√©cialis√©e en UI/UX.",
    avatar: "/avatars/jane_smith.jpg",
  },
};

const GigsDetailPage = ({ collapsed }) => {
  const { id } = useParams();
  const navigate = useNavigate();

  const [gig, setGig] = useState(null);
  const [sellerInfo, setSellerInfo] = useState(null);
  const [reviews, setReviews] = useState([]);
  const [likes, setLikes] = useState(123);
  const [shares, setShares] = useState(45);

  useEffect(() => {
    const foundGig = gigsMock.find((g) => String(g.id) === id);
    setGig(foundGig || null);

    if (foundGig && foundGig.seller) {
      setSellerInfo(sellersMock[foundGig.seller] || null);
    } else {
      setSellerInfo(null);
    }

    setReviews([
      {
        id: 1,
        authorFirstName: "Alice",
        authorLastName: "Martin",
        authorCountry: "France",
        rating: 5,
        comment: "Excellent travail, tr√®s professionnel !",
        date: "2024-05-10",
      },
      {
        id: 2,
        authorFirstName: "Bob",
        authorLastName: "Johnson",
        authorCountry: "√âtats-Unis",
        rating: 4,
        comment: "Bonne communication, r√©sultat conforme.",
        date: "2024-04-22",
      },
      {
        id: 3,
        authorFirstName: "Charlie",
        authorLastName: "Lee",
        authorCountry: "Canada",
        rating: 3,
        comment: "Correct mais d√©lai un peu long.",
        date: "2024-03-15",
      },
    ]);
  }, [id]);

  if (!gig) {
    return (
      <main className={`gigDetailContainer ${collapsed ? "collapsed" : ""}`}>
        <p>Chargement ou gig introuvable...</p>
        <button onClick={() => navigate(-1)} className="backButton">
          ‚Üê Retour
        </button>
      </main>
    );
  }

  const handleLike = () => setLikes((prev) => prev + 1);
  const handleShare = () => alert("Merci de partager ce gig !");

  const averageRating =
    reviews.length > 0
      ? (reviews.reduce((acc, r) => acc + r.rating, 0) / reviews.length).toFixed(1)
      : "N/A";

  const reviewStats = reviews.reduce(
    (acc, r) => {
      acc.total++;
      acc.sum += r.rating;
      acc.byRating[r.rating] = (acc.byRating[r.rating] || 0) + 1;
      return acc;
    },
    { total: 0, sum: 0, byRating: {} }
  );

  return (
    <main className={`gigDetailContainer ${collapsed ? "collapsed" : ""}`}>
      <button onClick={() => navigate(-1)} className="backButton">
        ‚Üê Retour
      </button>

      <div className="gigGridContainer">
        {/* Section photo + d√©tails en dessous */}
        <div className="gigPhotoSection">
          {gig.images && gig.images.length > 0 ? (
            <img
              src={gig.images[0]}
              alt={gig.title}
              className="gigMainImage"
              loading="lazy"
            />
          ) : (
            <div className="imagePlaceholder">Aucune image disponible</div>
          )}

          <div className="gigPhotoDetails">
            <p><strong>Prix :</strong> ${gig.price}</p>
            <p><strong>Statut :</strong> {gig.status}</p>
            <p><strong>Date de cr√©ation :</strong> {gig.createdAt}</p>
          </div>
        </div>

        {/* Infos principales */}
        <div className="gigMainInfo">
          <h2 className="gigTitle">{gig.title}</h2>
          <p className="gigDescription">{gig.description || "Pas de description."}</p>

          {/* Infos vendeur */}
          {sellerInfo && (
            <section className="sellerInfo">
              <h3>Informations sur le vendeur</h3>
              <div className="sellerProfile">
                <img
                  src={sellerInfo.avatar}
                  alt={`${sellerInfo.firstName} ${sellerInfo.lastName}`}
                  className="sellerAvatar"
                />
                <div>
                  <p><strong>Nom complet :</strong> {sellerInfo.firstName} {sellerInfo.lastName}</p>
                  <p><strong>Pays d'origine :</strong> {sellerInfo.country}</p>
                  <p><strong>Bio :</strong> {sellerInfo.bio}</p>
                </div>
              </div>
            </section>
          )}

          {/* Section √Ä propos */}
          <div className="aboutServiceSection">
            <h3>√Ä propos de ce service</h3>
            <p>
              √ätes-vous frustr√© d'√™tre constamment restreint sur Facebook ? Si oui, vous √™tes au bon endroit.
            </p>
            <p>
              Je vais cr√©er un compte Facebook Business Manager et un compte Facebook Ads v√©rifi√©s. Je vends un profil solide, v√©rifi√© et un compte Business Manager v√©rifi√©. Je peux √©galement v√©rifier n'importe quel compte Business Manager.
            </p>
            <p>
              Je r√©soudrai tous vos probl√®mes, le cas √©ch√©ant, ou je cr√©erai un tout nouveau compte publicitaire Facebook Business Manager et configurerai toutes les actions n√©cessaires √† votre activit√©. Je vous fournirai un Business Manager v√©rifi√© pour que vous puissiez g√©rer facilement votre campagne publicitaire sans probl√®me.
            </p>
            <p><strong>Vous obtiendrez de moi :</strong></p>
            <ul>
              <li>Gestionnaire d'entreprise v√©rifi√© (FB BM v√©rifi√©) Faites de vous un administrateur de BM v√©rifi√©</li>
              <li>Configuration du pixel Facebook</li>
              <li>V√©rification de domaine</li>
              <li>Configuration du compte publicitaire pr√™t √† diffuser des annonces</li>
              <li>R√©soudre le probl√®me de d√©sactivation des publicit√©s Facebook</li>
              <li>Ajoutez des pages et un mode de paiement.</li>
              <li>Gestionnaire d'entreprise non v√©rifi√©</li>
              <li>Faites de vous un administrateur de BM v√©rifi√©</li>
            </ul>
            <p><strong>Pourquoi je suis le meilleur ?</strong></p>
            <ul>
              <li>Communication amicale</li>
              <li>Service client 24h/24 et 7j/7</li>
              <li>Tr√®s bon service</li>
            </ul>
            <p>
              Nous proposons une offre de remplacement unique de 7 jours enti√®rement gratuite. Cette offre est enti√®rement √† notre charge, car Meta peut vous imposer des restrictions m√™me apr√®s notre intervention. Cependant, nous nous soucions de nos clients, alors nous l'acceptons.
            </p>
          </div>

          {/* Interactions */}
          <div className="interactions">
            <button onClick={handleLike} className="interactionBtn" aria-label="Like">
              üëç {likes}
            </button>
            <button onClick={handleShare} className="interactionBtn" aria-label="Partager">
              üîÑ {shares}
            </button>
          </div>
        </div>

        {/* Section avis clients pleine largeur */}
        <section className="reviewsSection">
          <h3>Avis des clients ({reviews.length}) - Note moyenne : {averageRating} ‚≠ê</h3>

          <div className="reviewStats">
            {Object.entries(reviewStats.byRating)
              .sort((a, b) => b[0] - a[0])
              .map(([rating, count]) => (
                <div key={rating} className="reviewStatItem">
                  <span>{rating} ‚≠ê :</span> <strong>{count}</strong>
                </div>
              ))}
          </div>

          {reviews.length === 0 ? (
            <p>Aucun avis pour le moment.</p>
          ) : (
            reviews.map((review) => (
              <div key={review.id} className="reviewCard">
                <div className="reviewHeader">
                  <strong>{review.authorFirstName} {review.authorLastName}</strong>
                  <span className="reviewCountry">({review.authorCountry})</span>
                  <span className="reviewRating">{'‚≠ê'.repeat(review.rating)}</span>
                </div>
                <p className="reviewComment">{review.comment}</p>
                <small className="reviewDate">{new Date(review.date).toLocaleDateString()}</small>
              </div>
            ))
          )}
        </section>
      </div>
    </main>
  );
};

export default GigsDetailPage;
